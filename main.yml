---
- hosts: all
  become: true
  gather_facts: true
  vars_files:
    #- /home/jiadmin/ansible/group_vars/vault.yml  # path to the vault file
    - ~/ansible/group_vars/vault.yml  # path to the vault file

  #vars:  # moved to all.yml
  #  new_user: joe
  #  new_user_password: new_user_password # moved to all.yml

  #roles:  # moved to all.yml
  #  - custom-roles
  #  - system

  pre_tasks:
    - name:  Detect Host User
      ansible.builtin.import_tasks: pre_tasks/whoami.yml
      tags:
        always

  tasks:
#    - name: Install aptitude
#      apt:
#        name: aptitude
#        state: latest
#        update_cache: true 

    - name: Update apt and install required system packages
      apt:
        name:  
          - curl
          - unzip
          - wget
          - tree
        state: latest
        update_cache: true
      when: ansible_distribution in ["Debian", "Ubuntu"]  

    - name: Restrist access to the .vault_key file "~/ansible/.vault_key"
      file:
        path: ~/ansible/.vault_key
        state: file
        mode: 0600
        owner: "{{ host_user }}"
        group: "{{ host_user }}"

#    - name: Include multiple tasks
#      include_tasks: "{{ item }}"
#      loop:
#        - roles/system/tasks/main.yml
#        - roles/custom-roles/tasks/create_user.yml  
#        - roles/custom-roles/tasks/fonts.yml
#        - roles/custom-roles/tasks/zsh.yml
#        - roles/custom-roles/tasks/starship.yml
#        - roles/custom-roles/tasks/neofetch.yml
#        - roles/custom-roles/tasks/azure_cli.yml
#        - roles/custom-roles/tasks/terraform.yml
#        - roles/custom-roles/tasks/github_cli.yml
#        - roles/custom-roles/tasks/kubectl.yml

    - name: Set roles
      ansible.builtin.set_fact:
        run_roles: "{{ ansible_run_tags != ['all'] and ansible_run_tags or default_roles | difference(exclude_roles | default([])) }}"
      tags:
        - always

    - name: Display roles
      ansible.builtin.debug:
        var: run_roles
      tags:
        - always

    - name: Run roles
      ansible.builtin.include_role:
        apply:
          tags:
            - "{{ roles_item }}"
        name: "{{ roles_item }}"
      loop_control:
        loop_var: roles_item
      with_items: "{{ run_roles }}"
      tags:
        - always   
---
- name: Ansible Config
  hosts: localhost
  connection: local
  #become: true
  #gather_facts: true
  vars_files:
    - ~/ansible/group_vars/vault.yml  # path to the vault file

  #vars:  # moved to all.yml
  #  new_user: joe
  #  new_user_password: new_user_password # moved to all.yml

  #roles:  # moved to all.yml
  #  - custom-roles
  #  - system

  pre_tasks:
    - name:  Detect Host User
      ansible.builtin.import_tasks: pre_tasks/whoami.yml
      tags:
        always

    - name: Echo Variables
      debug:
        msg: "host_user is {{ host_user }}, ansible_user_dir is {{ ansible_user_dir }}"

  tasks:
#    - name: Install aptitude
#      apt:
#        name: aptitude
#        state: latest
#        update_cache: true 

    - name: Update apt and install required system packages
      apt:
        name:
          - tree
        state: latest
        update_cache: true
      become: true  
      when: ansible_distribution in ["Debian", "Ubuntu"]  

#    - name: Set roles
#      ansible.builtin.set_fact:
#        run_roles: "{{ ansible_run_tags != ['all'] and ansible_run_tags or default_roles | difference(exclude_roles | default([])) }}"
#      tags:
#        - always
#
#    - name: Display roles
#      ansible.builtin.debug:
#        var: run_roles
#      tags:
#        - always
#
#    - name: Run roles
#      ansible.builtin.include_role:
#        apply:
#          tags:
#            - "{{ roles_item }}"
#        name: "{{ roles_item }}"
#      loop_control:
#        loop_var: roles_item
#      with_items: "{{ run_roles }}"
#      tags:
#        - always   

    - name: Run multiple roles
      include_role: "{{ item }}"
      loop_control: loop_var=role_name
      loop: "{{ roles }}"
      ignore_errors: yes
    - name: Subsequent task (runs even if roles fail)
      debug:
        msg: "Playbook continued after potential role failures"
  
    #vars:
      default_roles:
        - system
        #- create_user
        - zsh
        - git
        - fonts
        - neofetch
        - neovim
        - starship
        - azure_cli
        - github_cli
        - kubectl
        - terraform 
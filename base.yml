---
- hosts: all
  become: true
  gather_facts: true

  vars:
    new_user: jiadmin
    new_user_password: "temp_password"
    become: yes
    become_user: "{{ new_user }}"
    become_method: sudo

  tasks:
    #become: "{{ become }}"
    #become_user: "{{ become_user }}"
#    - name: Get my user
#      ansible.builtin.set_fact:
#        remote_regular_user: "{{ ansible_user_id }}"

    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true 

    - name: Install updates (Ubuntu)
      apt:
        upgrade: dist
        update_cache: true
     # when: assible_distribution == "Ubuntu"

    - name: Create a new regular user with sudo privileges
      user:
        name: "{{ new_username }}"
        password: "{{ new_user_password }}"
        shell: /bin/bash
        groups: sudo
        append: true
        create_home: true
        state: present

    - name: Update apt and install required system packages
      apt:
        pkg:
          - curl
          - vim
          - git
          - wget
          - tree
          - neofetch
          - zsh
        state: latest
        update_cache: true

#    - name: Remove package (if installed)
#      apt:
#        pkg:
#          - nvim
#        state: absent  # Remove the package if present
#        update_cache: true  # Update cache before checking for git 

    - name: Install and configure Neofetch
      block:
        - name: Run program neofetch
          command: /usr/bin/neofetch --arguments
          become: true  # optional, depending on program requirements
    
        - name: Download single file from GitHub
          get_url:
            url: https://raw.githubusercontent.com/guanz808/dotfiles/main/.config/neofetch/config.conf
            dest: /home/jiadmin/.config/neofetch/config.conf
    
        - name: Edit bashrc
          become: true  # Retain this for clarity and consistency
          lineinfile:
            path: /home/jiadmin/.bashrc
            #regexp: '^$'  # Match an empty line (end of file)
            insertafter: EOF  # Append the line after the last match (end of file)
            line: 'neofetch'  # Replace 'xxx' with the actual line you want to add
          #when: ansible_distribution == "Ubuntu"

    - name: Download and run Azure CLI install script
      block:
        - name: Add the Azure CLI apt key
          ansible.builtin.apt_key:
            url: https://packages.microsoft.com/keys/microsoft.asc
            keyring:  /etc/apt/keyrings/microsoft.gpg

        - name: Add Azure CLI repository
          ansible.builtin.apt_repository:
            #repo: "deb [arch={{ az_arch.stdout }} signed-by=/etc/apt/keyrings/microsoft.gpg] https://packages.microsoft.com/repos/azure-cli/ {{ az_dist.stdout }} main"
            repo: >
              deb 
              [signed-by=/etc/apt/keyrings/microsoft.gpg] 
              https://packages.microsoft.com/repos/azure-cli/ 
              jammy
              main
            #state: present

    - name: Add the HashiCorp Repository and Install Terraform
      block:
        - name: Add the hashicorp apt key
          ansible.builtin.apt_key:
            url: https://apt.releases.hashicorp.com/gpg
            keyring:  /usr/share/keyrings/hashicorp-archive-keyring.gpg 
        
        # see https://www.vagrantup.com/downloads
        - name: Add the hashicorp repository
          ansible.builtin.apt_repository:
            repo: >
              deb
              [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg]
              https://apt.releases.hashicorp.com
              {{ ansible_distribution_release }}
              main
    
        - name: Install Terraform
          apt:
            name: terraform
            state: latest
            update_cache: true      
      become: true   

    - name: Add the GitHub CLI Repository and Install GigHub CLI
      block:
        - name: Download and set up GitHub CLI GPG key
          ansible.builtin.apt_key:
            url: https://cli.github.com/packages/githubcli-archive-keyring.gpg
            keyring: /usr/share/keyrings/githubcli-archive-keyring.gpg

        - name: Add GitHub CLI repository
          ansible.builtin.apt_repository:
            repo: >
              deb 
              [arch={{ ansible_architecture }} signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] 
              https://cli.github.com/packages 
              stable 
              main

        - name: Install GitHub CLI
          apt:
            name: gh
            state: latest
            update_cache: true
      become: true           

    # see https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/#install-using-native-package-management
    - name: Add the kubernetes apt repository key
      ansible.builtin.apt_key:
        # e.g. https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key
        #url: https://pkgs.k8s.io/core:/stable:/v{{ (k8s_client_kubectl_version | split('.'))[:2] | join('.') }}/deb/Release.key
        url: https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key
        keyring: /etc/apt/keyrings/pkgs.k8s.io.gpg
    
    # see https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/#install-using-native-package-management
    - name: Add the kubernetes repository
      ansible.builtin.apt_repository:
        # see https://wiki.debian.org/DebianRepository/Format
        # see https://pkgs.k8s.io/core:/stable:/v1.29/deb/InRelease
        # see https://pkgs.k8s.io/core:/stable:/v1.29/deb/Packages
        # e.g. https://pkgs.k8s.io/core:/stable:/v1.29/deb/
        repo: >
          deb
          [signed-by=/etc/apt/keyrings/pkgs.k8s.io.gpg]
          https://pkgs.k8s.io/core:/stable:/v1.30/deb/
          /
    
    # NB execute apt-cache madison kubectl to known the available versions.
    - name: Install kubectl
      block:
        - name: Install kubectl
          apt:
            name: kubectl
            state: latest
            update_cache: true
    
    - name: Install kubectl bash completion
      block:
        - name: Get kubectl bash completion
          ansible.builtin.command: kubectl completion bash
          register: bash_completion
          changed_when: false
        - name: Install kubectl bash completion
          ansible.builtin.copy:
            content: "{{ bash_completion.stdout }}"
            dest: /usr/share/bash-completion/completions/kubectl
            mode: 0444

    - name: Download file from GitHub
      get_url:
        url: https://github.com/guanz808/ansible/raw/main/.zshrc
        #dest: "{{ ansible_env.HOME }}/.zshrc"
        dest: "{{ new_username }}/.zshrc"
        mode: '0440'   

    - name: Change shell to zsh
      ansible.builtin.user:
        #name: "{{ remote_regular_user }}"
        name: "{{ new_username }}"
        shell: /usr/bin/zsh

